@page
@model MediPlat.RazorPage.Pages.Doctors.DoctorModel

@{
    ViewData["Title"] = "Danh sách bác sĩ";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">
        @TempData["ErrorMessage"]
    </div>
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger text-center">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
        <script>
            setTimeout(function () {
                window.location.href = "/Auth/Login";
            }, 3000);
        </script>
    </div>
}

<div class="modal fade" id="createDoctorModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="createDoctorContent"></div>
        </div>
    </div>
</div>

<div class="container py-5">
    <div class="row">
        <div class="col-lg-3">
            <div class="list-group shadow-lg rounded-4">
                <a href="/Admin/Index" class="list-group-item list-group-item-action">🏠 Dashboard</a>
                <a href="/Doctors/ManageDoctor" class="list-group-item list-group-item-action bg-primary text-white active ">👨‍⚕️ Manage Doctors</a>
                <a href="/Medicines/Index" class="list-group-item list-group-item-action">💊 Manage Medicines</a>
                <a href="/Subscriptions/Index" class="list-group-item list-group-item-action">📄 Manage Subscriptions</a>
            </div>
        </div>
        <div class="col-lg-9">
            <div class="card shadow-lg rounded-4">
                <div class="card-header bg-gradient-primary text-white text-center">
                    <h2 class="fw-bold">Danh sách bác sĩ</h2>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3">
                        <button id="btnAddDoctor" class="btn btn-success rounded-4">
                            <i class="bi bi-plus-circle"></i> Thêm Bác Sĩ
                        </button>
                        <input type="text" id="searchInput" class="form-control w-25 rounded-4" placeholder="🔍 Tìm kiếm bác sĩ">
                    </div>
                    <div class="row" id="doctorList">
                        @foreach (var doctor in Model.DoctorList)
                        {
                            <div class="col-md-4 mb-4">
                                <div class="card shadow-lg text-center hover-scale rounded-4">
                                    <div class="card-header bg-gradient-info text-white">
                                        <h5 class="mb-0 fw-bold">@doctor.FullName</h5>
                                        <small>@doctor.AcademicTitle</small>
                                    </div>
                                    <div class="card-body">
                                        <img src="@doctor.AvatarUrl" alt="Avatar" class="rounded-circle mb-3 border border-primary" style="width: 100px; height: 100px;">
                                        <p class="text-muted mb-1">@doctor.Email</p>
                                        <p><strong>Phone:</strong> @doctor.PhoneNumber</p>
                                        <p><strong>Degree:</strong> @doctor.Degree</p>
                                        <p>
                                            <strong>Status:</strong>
                                            @if (doctor.Status == "Active")
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Banned</span>
                                            }
                                        </p>
                                        <p><strong>Fee Per Hour:</strong> $@doctor.FeePerHour</p>
                                        <form method="post" asp-page-handler="ToggleStatus" onsubmit="return confirm('Are you sure you want to change the status of this doctor?');">
                                            <input type="hidden" name="id" value="@doctor.Id" />
                                            <input type="hidden" name="status" value="@doctor.Status" />
                                            <button type="submit" class="btn @(doctor.Status == "Active" ? "btn-danger" : "btn-success")">
                                                @(doctor.Status == "Active" ? "Ban" : "Unban")
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const modal = new bootstrap.Modal(document.getElementById("createDoctorModal"));

        document.querySelector("#btnAddDoctor").addEventListener("click", function () {
            const contentDiv = document.getElementById("createDoctorContent");
            contentDiv.innerHTML = '<div class="text-center py-4"><div class="spinner-border text-primary"></div></div>';

            fetch("/Doctors/Create?handler=CreateModal", {
                headers: {
                    "Accept": "text/html",
                    "Cache-Control": "no-cache"
                }
            })
                .then(response => response.text())
                .then(html => {
                    contentDiv.innerHTML = html;
                    modal.show();

                    document.querySelector("#createDoctorForm").addEventListener("submit", async function (e) {
                        e.preventDefault();
                        const form = e.target;
                        const formData = new FormData(form);
                        const actionUrl = form.getAttribute("action");
                        const response = await fetch(actionUrl, { method: "POST", body: formData });
                        if (response.ok) {
                            const result = await response.json();
                            if (result.success) {
                                alert("Thêm bác sĩ thành công!");
                                modal.hide();
                                location.reload();
                            }
                        } else {
                            contentDiv.innerHTML = await response.text();
                        }
                    });
                })
                .catch(() => {
                    contentDiv.innerHTML = '<div class="text-danger text-center">Không thể tải nội dung!</div>';
                });
        });

        document.getElementById("searchInput").addEventListener("input", function () {
            let keyword = this.value.toLowerCase();
            let cards = document.querySelectorAll("#doctorList .card");
            cards.forEach(card => {
                let name = card.querySelector("h5").innerText.toLowerCase();
                card.style.display = name.includes(keyword) ? "block" : "none";
            });
        });
    });
</script>
