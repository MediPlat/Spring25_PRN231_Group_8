CREATE TABLE "Patient" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "UserName" NVARCHAR(255),
  "Email" NVARCHAR(255),
  "Password" NVARCHAR(255),
  "Balance" DECIMAL(12,2) DEFAULT 0,
  "Status" NVARCHAR(50)
);

CREATE TABLE "Profile"(
"ID" UNIQUEIDENTIFIER PRIMARY KEY,
"PatientID" UNIQUEIDENTIFIER,
"FullName" NVARCHAR(255),
"Sex" NVARCHAR(50),
"DOB" DATETIME,
"Address" NVARCHAR(MAX),
"JoinDate" DATETIME DEFAULT GETDATE(),
"PhoneNumber" NVARCHAR(20),
);

CREATE TABLE "Specialty" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "Name" NVARCHAR(255),
  "Description" NVARCHAR(MAX),
);

CREATE TABLE "Experience" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "SpecialtyID" UNIQUEIDENTIFIER,
  "Title" NVARCHAR(255),
  "Description" NVARCHAR(MAX),
  "Certificate" NVARCHAR(MAX),
  "DoctorID" UNIQUEIDENTIFIER,
  "Status" NVARCHAR(20) CHECK ("Status" IN (N'Active', N'Suspended'))
);

CREATE TABLE "Doctor" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "UserName" NVARCHAR(255),
  "FullName" NVARCHAR(255),
  "Email" NVARCHAR(255),
  "Password" NVARCHAR(255),
  "AvatarUrl" NVARCHAR(MAX),
  "Balance" DECIMAL(12,2) DEFAULT 0,
  "FeePerHour" DECIMAL(12,2),
  "Degree" NVARCHAR(255),
  "AcademicTitle" NVARCHAR(255),
  "JoinDate" DATETIME DEFAULT GETDATE(),
  "PhoneNumber" NVARCHAR(50),
  "Status" NVARCHAR(50),
  "AverageRating" DECIMAL(2,1) CHECK (AverageRating BETWEEN 1.0 AND 5.0)

);

CREATE TABLE "Subscription" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "Name" NVARCHAR(255),
  "Price" DECIMAL(18,2),
  "EnableSlot" TINYINT,
  "Description" NVARCHAR(MAX),
  "CreatedDate" DATETIME DEFAULT GETDATE(),
  "UpdateDate" DATETIME
);

CREATE TABLE "DoctorSubscription" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "SubscriptionID" UNIQUEIDENTIFIER,
  "EnableSlot" SMALLINT,
  "DoctorID" UNIQUEIDENTIFIER,
  "StartDate" DATETIME DEFAULT GETDATE(),
  "EndDate" DATETIME,
  "UpdateDate" DATETIME,
  "Status" NVARCHAR(20) CHECK ("Status" IN (N'Active', N'Inactive'))
);

CREATE TABLE "Services" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "SpecialtyID" UNIQUEIDENTIFIER,
  "Title" NVARCHAR(255),
  "Description" NVARCHAR(MAX)
);

CREATE TABLE "Slot" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "DoctorID" UNIQUEIDENTIFIER,
  "ServiceID" UNIQUEIDENTIFIER,
  "Title" NVARCHAR(255),
  "Description" NVARCHAR(MAX),
  "StartTime" DATETIME,
  "EndTime" DATETIME,
  "Date" DATETIME,
  "SessionFee" DECIMAL(12,2),
  "Status" NVARCHAR(50)
);

CREATE TABLE "Transaction" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "PatientID" UNIQUEIDENTIFIER,
  "DoctorID" UNIQUEIDENTIFIER,
  "SubID" UNIQUEIDENTIFIER,
  "AppointmentSlotID" UNIQUEIDENTIFIER,
  "TransactionInfo" NVARCHAR(MAX),
  "Amount" DECIMAL(18,2),
  "CreatedDate" DATETIME DEFAULT GETDATE(),
  "Status" NVARCHAR(50) CHECK ("Status" IN (N'Pending', N'Completed', N'Failed')) DEFAULT 'Pending' 
);

CREATE TABLE "Review" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "SlotID" UNIQUEIDENTIFIER UNIQUE,
  "Rating" TINYINT CHECK (rating BETWEEN 1 AND 5),
  "Message" NVARCHAR(MAX),
  "CreatedDate" DATETIME DEFAULT GETDATE(),
);

CREATE TABLE "AppointmentSlot" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "SlotID" UNIQUEIDENTIFIER,
  "ProfileID" UNIQUEIDENTIFIER,
  "Status" NVARCHAR(50) NOT NULL CHECK ("Status" IN (N'Pending', N'Confirmed', N'Completed', N'Cancelled', N'Pending Confirmation')),
  "CreatedDate" DATETIME DEFAULT GETDATE(),
  "Notes" NVARCHAR(MAX)
);

CREATE TABLE "Medicine" (
  "ID" UNIQUEIDENTIFIER PRIMARY KEY,
  "Name" NVARCHAR(255) NOT NULL,
  "DosageForm" NVARCHAR(100), -- Dạng thuốc (Viên nén, Siro, Tiêm,...)
  "Strength" NVARCHAR(50) NOT NULL, -- Hàm lượng (500mg, 200mg,...)
  "SideEffects" NVARCHAR(MAX), -- Tác dụng phụ
  "Status" NVARCHAR(50) NOT NULL DEFAULT 'Active'
);

CREATE TABLE "AppointmentSlotMedicine" (
  "AppointmentSlotMedicineID" UNIQUEIDENTIFIER PRIMARY KEY,
  "AppointmentSlotID" UNIQUEIDENTIFIER,
  "MedicineID" UNIQUEIDENTIFIER,
  "Dosage" NVARCHAR(255) NOT NULL, -- Liều lượng kê đơn (vd: "2 viên/ngày")
  "Instructions" NVARCHAR(MAX), -- Hướng dẫn sử dụng(uống sau khi ăn, uống trước khi ăn)
  "Quantity" SMALLINT NOT NULL, 
  );

ALTER TABLE "Profile" ADD FOREIGN KEY ("PatientID") REFERENCES "Patient" ("ID");

ALTER TABLE "Experience" ADD FOREIGN KEY ("SpecialtyID") REFERENCES "Specialty" ("ID");

ALTER TABLE "Experience" ADD FOREIGN KEY ("DoctorID") REFERENCES "Doctor" ("ID");

ALTER TABLE "DoctorSubscription" ADD FOREIGN KEY ("SubscriptionID") REFERENCES "Subscription" ("ID");

ALTER TABLE "DoctorSubscription" ADD FOREIGN KEY ("DoctorID") REFERENCES "Doctor" ("ID");

ALTER TABLE "Services" ADD FOREIGN KEY ("SpecialtyID") REFERENCES "Specialty" ("ID");

ALTER TABLE "Slot" ADD FOREIGN KEY ("DoctorID") REFERENCES "Doctor" ("ID");

ALTER TABLE "Slot" ADD FOREIGN KEY ("ServiceID") REFERENCES "Services" ("ID");

ALTER TABLE "AppointmentSlot" ADD FOREIGN KEY ("SlotID") REFERENCES "Slot" ("ID");

ALTER TABLE "AppointmentSlot" ADD FOREIGN KEY ("ProfileID") REFERENCES "Profile" ("ID");

ALTER TABLE "Transaction" ADD FOREIGN KEY ("AppointmentSlotID") REFERENCES "AppointmentSlot" ("ID");

ALTER TABLE "Transaction" ADD FOREIGN KEY ("SubID") REFERENCES "Subscription" ("ID");

ALTER TABLE "Transaction" ADD FOREIGN KEY ("PatientID") REFERENCES "Patient" ("ID");

ALTER TABLE "Transaction" ADD FOREIGN KEY ("DoctorID") REFERENCES "Doctor" ("ID");

ALTER TABLE "Review" ADD FOREIGN KEY ("SlotID") REFERENCES "Slot" ("ID");

ALTER TABLE "AppointmentSlotMedicine" ADD FOREIGN KEY ("AppointmentSlotID") REFERENCES "AppointmentSlot" ("ID");

ALTER TABLE "AppointmentSlotMedicine" ADD FOREIGN KEY ("MedicineID") REFERENCES "Medicine" ("ID");